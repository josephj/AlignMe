!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){function d(a,b){var c=this;if(c.overlay=$(a),c.relateTo=$(b.relateTo)||null,c.constrainBy=$(b.constrainBy)||null,c.skipViewport=b.skipViewport===!1?!1:!0,!c.overlay)throw new Error("`el` element is required");if(!c.relateTo)throw new Error("`relateTo` option is required")}var e=function(a,b){var c,d,e,f=0;for(d in a)a.hasOwnProperty(d)&&(e=a[d],e[b]>f&&(f=e[b],c=e));return c},f={getPoints:function(a){var b=a.offset(),c=a.outerWidth(),d=a.outerHeight();return{left:b.left,top:b.top,right:b.left+c,bottom:b.top+d,width:c,height:d}},getPositions:function(a,b){b.left+b.width/2-a.width/2;return[{left:b.left,top:b.top-a.height,name:"lblt"},{left:b.right-a.width,top:b.top-a.height,name:"rbrt"},{left:b.right,top:b.top,name:"ltrt"},{left:b.right,top:b.bottom-a.height,name:"lbrb"},{left:b.right-a.width,top:b.bottom,name:"rtrb"},{left:b.left,top:b.bottom,name:"ltlb"},{left:b.left-a.width,top:b.bottom-a.height,name:"rblb"},{left:b.left-a.width,top:b.top,name:"rtlt"}]},align:function(){var a,b,c,d,f,g,h,i,j=this,k=!1,l=j.overlay,m=j.relateTo,n=j.constrainBy,o=j.getPoints(l),p=j.getPoints(m),q=j.getPoints(n);c=j.getPositions(o,p),j.skipViewport||(d=$(window),f=d.scrollTop(),g=f+d.height(),f>q&&(q.top=f),g<q.bottom&&(q.bottom=g,q.height=g-f));for(h in c)c.hasOwnProperty(h)&&(b=c[h],i=[b.top-q.top,q.right-b.left+o.width,q.bottom-b.top+o.height,b.left-q.left],b.right=b.left+o.width,b.bottom=b.top+o.height,b.left>=q.left&&b.top>=q.top&&b.right<=q.right&&b.bottom<=q.bottom?(k=!0,b.inDistance=Math.min.apply(null,i)):(b.distances=i,b.overlapSize=(Math.min(b.right,q.right)-Math.max(b.left,q.left))*(Math.min(b.bottom,q.bottom)-Math.max(b.top,q.top))));a=k?e(c,"inDistance"):e(c,"overlaySize"),l.offset(a)}};$.extend(d.prototype,f),"object"==typeof c&&c?b.exports=d:"function"==typeof define&&define.amd&&define(["exports"],d),window.Stackla?window.Stackla.AlignMe=d:window.AlignMe=d},{}]},{},[1]);